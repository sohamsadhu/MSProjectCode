package com.Soham.MSProject.Testing;

import static org.junit.Assert.assertArrayEquals;

import org.junit.BeforeClass;
import org.junit.Test;

import com.Soham.MSProject.SHA3.Keccak200;
import com.Soham.MSProject.SHA3.Keccak400;
import com.Soham.MSProject.SHA3.Keccak800;

/**
 * Test all the reduced state versions of Keccak.
 * @author Soham
 */
public class KeccakReducedTest 
{
  private static Keccak200 keccak200;   // Reduced Keccak version for state 200 bits
  private static Keccak400 keccak400;   // Keccak state of 400 bits
  private static Keccak800 keccak800;   // and Keccak state of 800 bits.
  
  @BeforeClass
  public static void initialise()
  {
    keccak200 = new Keccak200();
    keccak400 = new Keccak400();
    keccak800 = new Keccak800();
  }
  
  @Test
  public void testKeccak200(){}
  
  @Test
  public void testKeccak400(){}
  
  @Test
  public void testKeccak800SmallString()
  {
    byte[] expects = keccak800.convertHexStringToBytes("2848B09F74A9E2ADEC6EC0D96FAABFEFDA"
        + "4DABF3D7F1D6AA4A29635A");
    assertArrayEquals( expects, keccak800.hash("00112233445566778899AABBCCDDEEFF", 224, 0));
    expects = keccak800.convertHexStringToBytes("9DD5BA4B4019AF9287759B7DB20FDCC3E028A47FB0"
        + "51C05E819A90908ECFC705");
    assertArrayEquals( expects, keccak800.hash("00112233445566778899AABBCCDDEEFF", 256, 0));
    expects = keccak800.convertHexStringToBytes("CC5715E561D5818924A268BB5CDE58D4D6FDE44EA"
        + "9CE2BEE38264FF4C4D9B71C7BAE61DFC12D0A7B3F413C320BFB2201");
    assertArrayEquals( expects, keccak800.hash("00112233445566778899AABBCCDDEEFF", 384, 0));
    expects = keccak800.convertHexStringToBytes("BFA1505C5E2080B66200AD8D93D08D043927A03844"
        + "803A616A7591FE1395EBE990AAAE5381C2C21D60F9F8DF44C22F919D1271F7B73E0267CFC322CAC04"
        + "D4592");
    assertArrayEquals( expects, keccak800.hash("00112233445566778899AABBCCDDEEFF", 512, 0));
  }
  
  @Test
  public void testKeccak800LargeString()
  {
    byte[] expects = keccak800.convertHexStringToBytes("A738251BB329EBB8DFD4DDEB3595F1106B472C6"
        + "42748CDEBE047B81B");
    assertArrayEquals( expects, keccak800.hash("4C6F72656D20697073756D20646F6C6F722073697420616"
        + "D65742C20636F6E73656374657475722061646970697363696E6720656C69742E20446F6E656320612064"
        + "69616D206C65637475732E205365642073697420616D657420697073756D206D61757269732E204D6165"
        + "63656E617320636F6E6775", 224, 0));
    expects = keccak800.convertHexStringToBytes("E276D1A90FC8AC316335F14734C3F3774B0E3FF2DD35913"
        + "5C49700593509CE78");
    assertArrayEquals( expects, keccak800.hash("4C6F72656D20697073756D20646F6C6F722073697420616"
        + "D65742C20636F6E73656374657475722061646970697363696E6720656C69742E20446F6E656320612064"
        + "69616D206C65637475732E205365642073697420616D657420697073756D206D61757269732E204D6165"
        + "63656E617320636F6E6775", 256, 0));
    expects = keccak800.convertHexStringToBytes("3A58EEEF2F2E2BAB1C907E7DD4971EAA761C3E738F0B4CC"
        + "1192147690C90A31F00D23AAE936EF97613E1B1A9E5461A8B");
    assertArrayEquals( expects, keccak800.hash("4C6F72656D20697073756D20646F6C6F722073697420616"
        + "D65742C20636F6E73656374657475722061646970697363696E6720656C69742E20446F6E656320612064"
        + "69616D206C65637475732E205365642073697420616D657420697073756D206D61757269732E204D6165"
        + "63656E617320636F6E6775", 384, 0));
    expects = keccak800.convertHexStringToBytes("4D72400C9D8F8E8F1311B96166B6A25AF5DB6E063D89528"
        + "8C7C5EAB43460B4B18950809A91D98F8AD0542D28AFD77767158E61BAA129382D8108E15F8E63A93E");
    assertArrayEquals( expects, keccak800.hash("4C6F72656D20697073756D20646F6C6F722073697420616"
        + "D65742C20636F6E73656374657475722061646970697363696E6720656C69742E20446F6E656320612064"
        + "69616D206C65637475732E205365642073697420616D657420697073756D206D61757269732E204D6165"
        + "63656E617320636F6E6775", 512, 0));
  }
}